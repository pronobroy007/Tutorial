 # Accessing The Request:
 -----------------------------------
	To obtain an instance of the current HTTP request via dependency injection,
	you should type-hint the "Illuminate\Http\Request" class on your controller method.
		***********************************
		*  use Illuminate\Http\Request;
		*  
		*  class UserController extends Controller
		*  { 
		*  	public function store(Request $request)
		*  	{
		*  		$name = $request->input('name');
		*  
		*  		//
		*  	}
		*  }
		***********************************
		>> $request->input('name'); => This "name" is post data come from web page.
		
		
	*  $uri = $request->path();
	>>  if the incoming request is targeted at http://domain.com/foo/bar, 
		  the path method will return foo/bar:
		  
	*  $request->is('admin/*')
	>> The is method allows you to verify that the incoming request path matches a
		 given pattern. You may use the * character as a wildcard when utilizing this method:
	


	*****************************************
	*	// Without Query String...
	*	$url = $request->url();
    *
	*	// With Query String...
	*	$url = $request->fullUrl();
	*****************************************
	>> To retrieve the full URL for the incoming request you may use the "url"
	   or "fullUrl" methods. 
		  
		  

	*******************************	  
	*  $method = $request->method();
    *  
	*  if ($request->isMethod('post')) {
	*  	//
	*  }
	*******************************
	>> The method method will return the HTTP verb for the request. You may use the 
		  isMethod method to verify that the HTTP verb matches a given string:
		  
		  
		  
		  
		  
# File Resposns:
--------------------
	*********************************************************
	*	 return response()->file($pathToFile);
	*
	*   return response()->file($pathToFile, $headers);
	*********************************************************
	
	
	*   return response()->file(storage_path('hell.txt'));
	>> In "storage" folder create a file "hell.txt" and this response will return that file.
	
	
	
	
	
	
# File Download:
--------------------
	****************************************************************
	*	 return response()->download($pathToFile);
	*
	*	 return response()->download($pathToFile, $name, $headers);
	*
	*	 return response()->download($pathToFile)->deleteFileAfterSend(true);
	****************************************************************
	
	*  return response()->download($pathToFile);
	>> This will download "hell.txt" file which is in "storage" folder.
