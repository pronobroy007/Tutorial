import java.awt.*;
public class MyRect 
{
   private Color color = Color.black;
   private int x, y, x2, y2;
   
   public MyRect(Color color) 
   {
	   this.color = color;
   }
   
   public void draw(Graphics g, int upperX, int upperY, int lowerX, int lowerY) 
   {
	      g.setColor(color);
	      g.fillRect(upperX, upperY, lowerX, lowerY);
   }
}





// This factory only creates a new rectangle if it 
// uses a color not previously used
// Intrinsic State: Color
// Extrinsic State: X & Y Values

import java.util.HashMap;
import java.awt.Color;
public class RectFactory 
{
	// The HashMap uses the color as the key for every 
	// rectangle it will make up to 8 total
	private static final HashMap<Color, MyRect> rectsByColor = new HashMap<Color, MyRect>();
   
	public static MyRect getRect(Color color) {
		MyRect rect = (MyRect)rectsByColor.get(color);
		
		// Checks if a rectangle with a specific
		// color has been made. If not it makes a
		// new one, otherwise it returns one made already
		if(rect == null) 
        {
			// Add new rectangle to HashMap
			rect = new MyRect(color);
			rectsByColor.put(color, rect);
         
		}
		return rect;
	}
}
